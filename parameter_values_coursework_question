import sympy as sym

# Define all variables
# Constants
# M , m , ell , g = sym . symbols ('M, m, ell , g')
M = 0.3
m = 0.1
ell = 0.35
g = 9.81
# system variables
a, b, c, d, x1 , x2 , x3 , x4 , F = sym . symbols ('a, b, c, d, x1 , x2 , x3 , x4 , F')

# Define φ
phi = 4 * m *ell *x4**2 * sym.sin(x3) + 4 * F - 3 * m * g * sym.sin(x3) * sym.cos(x3)
phi /=  4 * (M + m) - 3 * m * sym.cos(x3)**2

# Define ψ
psi =  -3 * (m * ell * x4**2 * sym.sin(x3) * sym.cos(x3) + F * sym.cos(x3) - (M+m)* g * sym.sin(x3))
psi /= ell* (4 *(M+m) - 3 * m * sym.cos(x3)**2)

# Determine the partial derivatives wrt F, x3, x4
phi_deriv_F = phi.diff(F) 
phi_deriv_x3 = phi.diff(x3)
phi_deriv_x4 = phi.diff(x4)

# Determine the partial derivatives of φ wrt F, x3, x4
psi_deriv_F = psi.diff(F)
psi_deriv_x3 = psi.diff(x3)
psi_deriv_x4 = psi.diff(x4)

F0 = 0
x30 = 0
x40 = 0

#
# Determine the parameter values
#
phi_deriv_F_at_equilibrium = phi_deriv_F.subs([
    (F, 0),
    (x3, 0),
    (x4, 0)
])

phi_deriv_x3_at_equilibrium = -1 * phi_deriv_x3.subs([
    (F, 0 ),
    (x3, 0),
    (x4, 0)
])

psi_deriv_F_at_equilibrium = -1 * psi_deriv_F.subs([
    (F, 0 ),
    (x3, 0),
    (x4, 0)
])

psi_deriv_x3_at_equilibrium = psi_deriv_x3.subs({
    (F, 0),
    (x3, 0),
    (x4, 0)
})

a = phi_deriv_F_at_equilibrium
b = phi_deriv_x3_at_equilibrium
c = psi_deriv_F_at_equilibrium
d = psi_deriv_x3_at_equilibrium

sym.pprint(a)
sym.pprint(b)
sym.pprint(c)
sym.pprint(d)
